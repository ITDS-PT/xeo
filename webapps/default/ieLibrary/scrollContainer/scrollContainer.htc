<public:component lightweight="true">
<public:attach event="onresize"		onevent="onResize()"/>
<public:attach event="ondocumentready" onevent="Init()"/>
<public:method name="checkBounds"/>
<public:method name="setVisible"/>
<public:property name="scrollVertical" value="1"/>
<public:property name="scrollHorizontal" value="1"/>
<script language="JavaScript">



var STEP_W = null; // from cSS scrollWidth
var STEP_H = null; // from cSS scrollHeight
var STEP_INTV = 20 ; // mills scroll

function Init()
{
	this.span_RS=null;
	this.span_LS=null;
	this.span_TS=null;
	this.span_BS=null;
	
	if(this.style.position=='absolute')
	{
		menuPosition='float';
	}
	else
	{
		menuPosition='fixed';
	}
	this.firstChild.style.position='relative';
    checkBounds();
}

function stop_Scroll(){	window.clearInterval( intv ) }


function onRight()
{
	if ( this.firstChild.offsetWidth + this.firstChild.style.posLeft+STEP_W > this.offsetWidth )
	{
		this.firstChild.style.posLeft-=STEP_W;
	}
	else
	{
		stop_Scroll();
	}
	checkBounds();
}

function onLeft()
{
	if ( this.firstChild.style.posLeft < 0 )
	{
		 this.firstChild.style.posLeft+=STEP_W;
	}
	else
	{
	   stop_Scroll();
	}
	checkBounds();
}

function onBottom()
{
	if ( this.firstChild.offsetHeight+this.firstChild.style.posTop+STEP_H > this.offsetHeight )
	{
		this.firstChild.style.posTop-=STEP_H;
	}
	else
	{
		stop_Scroll();
	}
	//debugger;
	checkBounds();
}

function onTop()
{
	if ( this.firstChild.style.posTop < 0 )
	{
		 this.firstChild.style.posTop+=STEP_H;
	}
	else
	{
	   stop_Scroll();
	}
	checkBounds();
}


function start_RS(){ intv=window.setInterval( onRight , STEP_INTV )}
function start_LS(){ intv=window.setInterval( onLeft , STEP_INTV )}
function start_BS(){ intv=window.setInterval( onBottom , STEP_INTV )}
function start_TS(){ intv=window.setInterval( onTop , STEP_INTV )}

function enable_RS()
{
	 if( this.span_RS == null )
	 {
		var i=window.document.createElement("span");
		i.style.zIndex=10;
		i.className = 'scrollRight';
		i.style.position='absolute';
		i.style.height= this.offsetHeight;
		i.style.top=0;
		
		i.onmouseover=start_RS;
		i.onmouseout=stop_Scroll;
		
		this.appendChild(i);
		if( STEP_W == null ) STEP_W=i.offsetWidth;
	
		this.span_RS=i;
	 }
	 this.span_RS.style.visibility='visible';
	 this.span_RS.style.left=this.offsetWidth-STEP_W;
}


function enable_LS()
{
	if( this.span_LS == null )
	 {
		var i=window.document.createElement("span");
		i.className = 'scrollLeft';
		i.style.zIndex=10;
		i.style.position='absolute';
		i.style.height= this.offsetHeight;
		i.style.top=0;
		i.onmouseover=start_LS;
		i.onmouseout=stop_Scroll;
		this.appendChild(i);
		if( STEP_W == null ) STEP_W=i.offsetWidth;
		this.span_LS=i;
	 }
	 this.span_LS.style.visibility='visible';
	 this.span_LS.style.left=0;
}

function enable_TS()
{
	 if( this.span_TS == null )
	 {
		var i=window.document.createElement("span");
		i.className = 'scrollTop';
		i.style.zIndex130;
		i.style.position ='absolute';
		i.style.width    = this.offsetWidth;
		//i.style.height   = STEP_H; 
		i.onmouseover=start_TS;
		i.onmouseout=stop_Scroll;
		this.appendChild(i);
		
		if( STEP_H == null ) STEP_H=i.offsetHeight;
		
		
		this.span_TS=i;
	 }
	 this.span_TS.style.visibility='visible';
	 this.span_TS.style.left=0;
	 this.span_TS.style.top=0;

}
function enable_BS()
{
	if( this.span_BS == null )
	 {
		var i=window.document.createElement("span");
		i.className = 'scrollBottom';
		i.style.zIndex=10;
		i.style.position ='absolute';
		i.style.width    = this.offsetWidth;
		i.onmouseover=start_BS;
		i.onmouseout=stop_Scroll;
		this.appendChild(i);
		if( STEP_H == null ) STEP_H=i.offsetHeight;
		this.span_BS=i;
	 }
	 this.span_BS.style.visibility='visible';
	 this.span_BS.style.left=0;
	 this.span_BS.style.top=this.style.posHeight-STEP_H;
	 

}

function disable_RS(){ if( this.span_RS ) this.span_RS.style.visibility='hidden' }
function disable_LS(){ if( this.span_LS ) this.span_LS.style.visibility='hidden' }
function disable_TS(){ if( this.span_TS ) this.span_TS.style.visibility='hidden' }
function disable_BS(){ if( this.span_BS ) this.span_BS.style.visibility='hidden' }

function setVisible( e )
{
checkBounds();
if( (this.span_RS && this.span_RS.style.visibility!='hidden' ) || (this.span_LS&&this.span_LS.style.visibility!='hidden' ))
{
	
	if ( this.firstChild.style.posLeft + e.offsetLeft+e.offsetWidth> this.offsetWidth )
	{
		this.firstChild.style.posLeft+= ( this.offsetWidth-( e.offsetLeft+e.offsetWidth ) )
		checkBounds();		
	}
}  


}

function checkBounds()
{

	if ( scrollHorizontal=='1' )
	{
		if ( this.firstChild.offsetWidth > this.offsetWidth )
		{
		 
			if( this.firstChild.offsetWidth + this.firstChild.style.posLeft+STEP_W > this.offsetWidth )
			{
				enable_RS();
			}
			else
			{
				disable_RS(); 
			}
   
			if ( this.firstChild.style.posLeft < 0 )
			{
				    enable_LS();
			}
			else
			{
			     disable_LS();
			}
		}
		else
		{
		   this.firstChild.style.posLeft=0;
		   disable_LS();
		   disable_RS();
		}
	}

	if ( scrollVertical=='1' )
	{
		var parentNode=this.parentElement;
		while( parentNode.nodeName!='TABLE' && parentNode.nodeName!='BODY'   )
		{
				parentNode = parentNode.parentElement;
		}
   
   
		if ( this.style.posTop+this.offsetHeight > parentNode.offsetHeight 
				|| this.offsetHeight < this.firstChild.offsetHeight )
		{
		  this.style.overflow='hidden';
		  this.style.posHeight = Math.min( parentNode.offsetHeight-this.style.posTop , this.firstChild.offsetHeight);

		  if ( this.firstChild.offsetHeight+this.firstChild.style.posTop > this.offsetHeight )
			 {
				enable_BS();
			 }
			 else
			 {
				disable_BS();
			 }
		  
		  if ( this.firstChild.style.posTop < 0 )
			 {
				enable_TS();
			 }
			 else
			 {
			    disable_TS();
			  }
   
		}
		else
		{
		   
			   this.firstChild.style.posTop=0;
			   disable_TS();
		    disable_BS();
		}
   
   }
}


function onResize()
{
	checkBounds();
}

</script>
</public:component>