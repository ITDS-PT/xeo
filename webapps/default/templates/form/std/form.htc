<public:component lightweight="true">
<public:attach event="ondocumentready" onevent="Init()"/>
<public:method name="Save"/>
<public:method name="SaveMaster"/>
<public:method name="duplicate"/>
<public:method name="duplicateTemplate"/>
<public:method name="forwardEmail"/>
<public:method name="Destroy"/>
<public:method name="SaveAs"/>
<public:method name="BindValues"/>
<public:method name="createSchema"/>
<public:method name="applyInterface"/>
<public:method name="BindExt"/>
<public:method name="executeMethod"/>
<public:method name="executeMethodOpenDoc"/>
<public:method name="executeStaticMeth"/>
<public:method name="SaveAndClose"/>
<public:method name="SaveAndNew"/>
<public:method name="SaveMasterAndClose"/>
<public:method name="SaveAsTemplate"/>
<public:method name="RemoveTemplate"/>
<public:method name="IsValid"/>
<public:method name="SubmitBoForm"/>
<public:method name="canClose"/>
<public:method name="Close"/>
<public:method name="getProperties"/>
<public:method name="detachCloseAlert"/>
<public:method name="Print"/>
<public:method name="BuildXml"/>
<public:method name="Reset"/>
<public:method name="replyEmail"/>
<public:method name="replyAllEmail"/>
<public:method name="SetTabFocus"/>
<public:method name="SetFieldState"/>
<public:method name="SetFieldReqLevel"/>
<public:method name="SetLookupFieldValue"/>
<public:property name="_bSaving"/>
<public:property name="_bUseCustomSaveEvent"/>
<public:event name="onsave" id="onSaveEvent"/>
<script language="JavaScript">
var _bSaving = false;
var _bUseCustomSaveEvent = false;
function Init()
{
   if (window.document.media == "print")
	{
		return false;
	}
	
   window.parent.status=this.id;
   initValues();
}

function SetTabFocus()
{
	SetFocus(event.tab.tabID);
}
function SetFocus(sTabId)
{
	var oTab = window.document.all(sTabId);
	var oElem;
	var iLen = crmForm.elements.length;
	for (var i = 0; i < iLen; i++)
	{
		oElem = crmForm.elements[i];
		oTab = oElem;
		while (oTab.className != "tab" && oTab.tagName != "FORM")
		{
			oTab = oTab.parentElement;
		}
		try
		{
			if (oTab.tagName != "FORM" && sTabId == oTab.id)
			{
				if (oElem.boType == "lu")
				{
					oElem.previousSibling.focus();
				}
				else
				{
					oElem.focus();
				}
				return;
			}
		}
		catch(e)
		{
			
			continue;
		}
	}
}

function SetFieldState(sField, bDisabled)
{
	o = boForm.all(sField);
	switch (o.boType)
	{
		case "lu":
			o.previousSibling.setDisabled(bDisabled);
			break;
		case "sel":
			o = o.parentElement.parentElement.parentElement.parentElement.parentElement;
			if (bDisabled)
			{
				o.disable();
			}
			else
			{
				o.enable();
			}
			break;
		default:
			o.disabled = bDisabled;
			if (bDisabled)
			{
				with (o.runtimeStyle)
				{
					backgroundColor = "#FFFFFF";
					borderColor		= "#cccccc";
				}
			}
			else
			{
				with (o.runtimeStyle)
				{
					backgroundColor = "";
					borderColor		= "#7b9ebd";
				}
			}
			break;
	}
}
function SetFieldReqLevel(sField, bRequired)
{
	o = boForm.all(sField);
	o.req = (bRequired) ? 1 : 0;
	switch (o.boType)
	{
		case "dtm":
		case "lu":
			o = o.parentElement.parentElement.parentElement.parentElement.parentElement.previousSibling;
			break;
		default:
			o = o.parentElement.previousSibling;
			break;
	}
	o.className = (bRequired) ? "req" : "";
}

function SetLookupFieldValue(oField, sId, sName)
{
	
	oField.value = sId;
	
	oField.parentElement.previousSibling.firstChild.innerHTML = "<span class='lui' oid='" + sId + "' otype='" + oField.otype + "' onclick='openlui();'><img class='lui' src='../../_imgs/ico_16_" + oField.otype + ".gif'>" + sName + "</span>";
}
function Reset()
{
	this.reset();
	_bSaving = false;
}
function Submit()
{
	_bSaving = true;
	if (boFormSubmit.fireEvent("onsubmit"))
	{
		winmain().setStatus( getIDX(),"<b>A enviar dados para o server </b><img src=resources/senddata.gif>");
		boFormSubmit.submit();
	}
	else
	{
		_bSaving = false;
	}
}

function executeMethod(name)
{
  createHiddenInput( "toExecute", name);
  BindValues();
 
}

function executeMethodOpenDoc(objName, objBoui, name)
{
	BindValues();
	winmain().openDoc('medium',objName.toLowerCase( ),'edit','method=execute&toExecute=' + name + '&template=false&relatedDocid='+getDocId()+'&myIDX='+getIDX()+'&fwdBoui=' + objBoui + '&object=' + objName );
}

function applyInterface(name)
{
  createHiddenInput( "interface", name);
  BindValues();
 
}

function BindValues(forceSubmit)
{
	if (!_bUseCustomSaveEvent)
	{
	    if(!forceSubmit) forceSubmit = false;
		return SubmitBoForm(10, true, forceSubmit, false, false);
	}
	else
	{
		var onSaveArg = createEventObject();
		onSaveArg.Mode = 10;
		onSaveEvent.fire(onSaveArg);
	}
}

function Save()
{
	if (!_bUseCustomSaveEvent)
	{
		return SubmitBoForm(1, true, false, false, false);
	}
	else
	{
		var onSaveArg = createEventObject();
		onSaveArg.Mode = 1;
		onSaveEvent.fire(onSaveArg);
	}
}


function SaveMaster()
{
	return SubmitBoForm(13, true, false, false, false);
}

function Destroy(bNoSubmit)
{
    var xresponse= newDialogBox("critical",bNoSubmit,[ jsmessage_8 , jsmessage_7 ],jsmessage_3)
    if ( xresponse==1 )
    {
	    if (!_bUseCustomSaveEvent)
    	{
    		return SubmitBoForm(3, true, false, true );
    	}
    	else
    	{
    		var onSaveArg = createEventObject();
    		onSaveArg.Mode = 2;
    		onSaveEvent.fire(onSaveArg);
    	}
      return true;
    }
    return false;
}

function createSchema()
{
    return SubmitBoForm(12, false, false, false, false);
}

function duplicate(objName, objBoui)
{
    BindValues();
	winmain().openDoc('medium',objName.toLowerCase( ),'edit','method=duplicate&template=false&relatedDocid='+getDocId()+'&myIDX='+getIDX()+'&duplicateBoui=' + objBoui + '&object=' + objName );
}


function replyAllEmail(objName, objBoui)
{
    BindValues();
	winmain().openDoc('medium',objName.toLowerCase( ),'edit','method=replyAll&template=false&relatedDocid='+getDocId()+'&myIDX='+getIDX()+'&duplicateBoui=' + objBoui + '&object=' + objName );
}

function replyEmail(objName, objBoui)
{
    BindValues();
	winmain().openDoc('medium',objName.toLowerCase( ),'edit','method=reply&template=false&relatedDocid='+getDocId()+'&myIDX='+getIDX()+'&duplicateBoui=' + objBoui + '&object=' + objName );
}

function forwardEmail(objName, objBoui)
{
    BindValues();
	winmain().openDoc('medium',objName.toLowerCase( ),'edit','method=forward&template=false&relatedDocid='+getDocId()+'&myIDX='+getIDX()+'&duplicateBoui=' + objBoui + '&object=' + objName );
}

function duplicateTemplate(objName, objBoui)
{
    BindValues();
	winmain().openDoc('medium',objName.toLowerCase( ),'edit','method=duplicate&template=true&relatedDocid='+getDocId()+'&myIDX='+getIDX()+'&duplicateBoui=' + objBoui + '&object=' + objName );
}

function SaveAsTemplate()
{
		return SubmitBoForm(5, true, false, false, false);

}

function RemoveTemplate()
{
		return SubmitBoForm(6, true, false, false, false);

}

function SaveMasterAndClose()
{
	SubmitBoForm(13, true, false, true);
}

function SaveAndClose()
{
	if (!_bUseCustomSaveEvent)
	{
		SubmitBoForm(1, true, false, true);
	}
	else
	{
		
		
		var onSaveArg = createEventObject();
		onSaveArg.Mode = 2;
		onSaveEvent.fire(onSaveArg);
	}
}

function SaveAndNew()
{
	if (!_bUseCustomSaveEvent)
	{
		SubmitBoForm(1, true, false, false , true);
	}
	else
	{
		
		
		var onSaveArg = createEventObject();
		onSaveArg.Mode = 2;
		onSaveEvent.fire(onSaveArg);
	}
}

function canClose(silent)
{
	var toRet=false;
	//debugger;
	//return true;
	if (!_bSaving ) // && BuildXml(false, true) != 3)
	{
		// testar se esta gravado 
		
		if ( !( boFormSubmit.boiChanged && boFormSubmit.boiChanged.value=='true' )  )
		{
			toRet=true;
		}
		
		
		var xalt=BuildXml(true,true,false);
		
		if (  boFormSubmit.orphan && boFormSubmit.orphan.value=='no' && (xalt.indexOf("boui")==-1 || xalt=="") )
		{
			toRet=true;
			xalt="";
		}
		
		//verifica se houve submit devido as formulas
		if (  ! xalt =="" || (winmain().ndl[getIDX()] != null && winmain().ndl[getIDX()].formulaChanged ))
		{
		   toRet=false;
		}
		
		
	
		if(!silent && !toRet)
		{
		   //alert( BuildXml());
		   
		    //this.BindExt();// o objetco fica logo alterado não pode ser....
		    
		    var xresponse = null;
		    if( window.parent && window.parent.event )
		    {
		      if (window.parent.event.ctrlKey ) xresponse=3;
		      if (window.parent.event.shiftKey ) xresponse=1;
		    }
		    
		    
		    
		    if ( xresponse == null )
		    {
				xresponse= newDialogBox("critical",jsmessage_9,[ jsmessage_10 , jsmessage_11 , jsmessage_12,jsmessage_13,jsmessage_2 ], jsmessage_3 )
		    }
			var ini=true;
			while ( xresponse==4 )
			{
			   if(ini)this.BindExt();
			   ini = false;
			   
			  
			  
			   window.showModalDialog("__showDifferences.jsp?Boui="+boFormSubmit.BOUI.value + "&boFormSubmitMode = 10&docid="+ getDocId(), "","dialogHeight:"+(window.screen.availHeight-100)+"px; dialogWidth:"+(window.screen.availWidth-160)+"px; edge: Raised; center: Yes;help:no;resizable: Yes; status: No;");
			   var xresponse= newDialogBox("critical","O que deseja fazer ?",[ jsmessage_10 , jsmessage_11 , jsmessage_12,jsmessage_14, jsmessage_2 ], jsmessage_3 )
			  
			}
		   
		   if ( xresponse==1 )
		   {
			 if ( boFormSubmit.editingTemplate )
			  {
			  saveTemplateForm()
			  
			  }
			  else
			  {
		     this.SaveAndClose();
		     }
		     toRet=false;
		   }
		   else if ( xresponse == 2)
		   {
		    // this.Save();
		     if ( boFormSubmit.editingTemplate )
			  {
			  saveTemplateForm()
			  
			  }
			  else
			  {
		     this.Save();
		     }
		     toRet=false;
		   }
		   else if ( xresponse == 3)
		   {
		     toRet=true;
		   }
		   else
		   {
			 toRet=false;
		   }		   
		}
/*
		if(!silent)
		{
			if(winmain().ndl.length > 200)
		  {
					xresponse= newDialogBox("critical",jsmessage_5,[jsmessage_16, jsmessage_2 ],jsmessage_3 )
					if ( xresponse==1 )
		   	  {
		   	  	window.parent.parent.parent.close();
		   	  }
		  }
		}
*/
	}
	return toRet;
}

function Close(){
	winmain().ndl[getIDX()].close();
}

function detachCloseAlert()
{
	window.detachEvent("onbeforeunload", Close);
}
function Print()
{
	window.open("__buildPreview.jsp?bouiToPreview="+boFormSubmit.BOUI.value+"&method=edit&docid="+getDocId()+"" );
}

function getProperties(){
   winmain().openDocUrl('fixed,540px,300px,noresize','__showProperties.jsp',"?showBoui="+boFormSubmit.BOUI.value+"&docid="+boFormSubmit.docid.value,'std');
}

function bindExt(){
	var iStatus = BuildXml(true);
	var iLen = boFormSubmit.elements.length;
	var d1=winmain().bocmds1;
	var d;
	if ( d1.document.readyState=='complete'){d=d1}
	else{alert("Neste momento não é possivel confirmar ---> TENTE NOVAMENTE ");return}
	
	xdocb=d.document;
	var xform = xdocb.createElement("FORM");
	xdocb.body.appendChild(xform);
	xform.method="POST";
    xform.action=boFormSubmit.action;
    xform.name="boFormSubmit";
	var xctrl;
	for (i = 0; i < iLen; i++)
	{
		var o = boFormSubmit.elements[i];
		xctrl = xdocb.createElement("INPUT");
        xctrl.type="hidden";
        xctrl.value = o.value;
        xctrl.name = o.name;
        xform.appendChild(xctrl);
		
	}
	
	xform.submit();
	
}


function SubmitBoForm(iMode, bCheckValid, bForceSubmit, bClose, bSaveAndNew)
{	
	if (_bSaving)
	{
		return;
	}
	var iStatus = BuildXml(true, (boFormSubmit.boFormSubmitId.value != ""));
	if (iStatus !="#error")
	{
		boFormSubmit.boFormSubmitMode.value = iMode;
		if (bForceSubmit || boFormSubmit.boFormSubmitXml.value)
		{
			
			
				if (bForceSubmit || boFormSubmit.boFormSubmitXml.value.length > 0)
				{
					if ( bClose ){
						createHiddenInput( "toClose", "y" );
					}
					
					if ( bSaveAndNew ){
						createHiddenInput( "toSaveAndNew", "y" );
					}
					Submit(iMode);
					return true;
				}
		}
	}
}
function IsValid()
{
	
	
	
	var sOldXml = crmFormSubmit.crmFormSubmitXml.value;
	try
	{
		return (BuildXml(true, false) != 2);
	}
	finally
	{
		crmFormSubmit.crmFormSubmitXml.value = sOldXml; 
	}
}


function initValues()
{
	var i, ii, o;
	var iLen = boForm.elements.length;
	for (i = 0; i < iLen; i++)
	{
		o = boForm.elements[i];
		if (o.type == "text" || o.type == "textarea")
		{
			o.value = Trim(o.value);
		}
		if (o.name.substr(0, 7) != "boForm" && !o.disabled)
		{
		
			if (o.returnValue || o.className == "selectBox")
			{
				if ( o.original+"" == 'undefined')	o.original=o.returnValue;
			}
			else 
			{
				o.original=o.value
		
			}
		}
	}
	var e="bo";

}

function BuildElemXml(bValidate,onlyVerify, auxBoForm, auxBoFormSubmit,xd)
{
	var i, ii, o;
	var iLen = auxBoForm.elements.length;
	var sXml = "";

	for (i = 0; i < iLen; i++)
	{
		o = auxBoForm.elements[i];
		if ( o.name.substr(0,8)!='_ignore_'){
			if (o.type == "text" || o.type == "textarea")
			{
				o.value = Trim(o.value);
			}
			if (o.name.substr(0, 7) != "boForm" && !o.disabled && o.name.substr(0, 7) != "button")
			{
  			  sXml += buildElem(o,onlyVerify);
			}
		}
	}
	
	var e="bo";

// -----------------------------------------------------------
	var tempXML="";
	
	xmlElements=auxBoForm.getElementsByTagName('textarea');
	
	for( var i=0 ; i< xmlElements.length ; i++)
	{
		var xid=xmlElements[i].id;
		var xname=xmlElements[i].name;
		
		if(xd)
		{
			try
			{
				if(FCKeditorAPI.GetInstance(xid))
				{
					var changed=xd.eval("FCKeditorAPI.GetInstance('"+xid+"').IsDirty()");
					if ( changed )
          {
            var xv=xd.eval("FCKeditorAPI.GetInstance('"+xid+"').GetXHTML()");
						tempXML+="<"+xname+"><![CDATA["+xv+"]]>"+"</"+xname+">";
          }
				}
			}catch(f){}
		}
		else
		{
			try
			{
				if(FCKeditorAPI.GetInstance(xid))
				{
					if ( FCKeditorAPI.GetInstance(xid).IsDirty() )
          {
            var xv=FCKeditorAPI.GetInstance(xid).GetXHTML();
						tempXML+="<"+xname+"><![CDATA["+xv+"]]>"+"</"+xname+">";
          }
				}
			}catch(f){}
		}
	}
	
	if(!tempXML || tempXML=="")
	{
		xmlElements=auxBoForm.getElementsByTagName('xml');
		
		for( var i=0 ; i< xmlElements.length ; i++)
		{
			var xid=xmlElements[i].id.substr(8);
			var xname=xmlElements[i].name;
			
			if(xd)
			{
			 	try {
					var xv=xd.eval("FCKeditorAPI.GetInstance('"+xid+"').GetXHTML()");
					var vant=xd.eval("window.document.getElementById('"+xid+"').editor.LinkedField.value");
				
					if ( xv != vant )
						tempXML+="<"+xname+"><![CDATA["+xv+"]]>"+"</"+xname+">";
				
			  }catch(f){}
			}
			else
			{
			 	try {					
					if ( FCKeditorAPI.GetInstance(xid).IsDirty() )
          {
            var xv=FCKeditorAPI.GetInstance(xid).GetXHTML();
						tempXML+="<"+xname+"><![CDATA["+xv+"]]>"+"</"+xname+">";
          }
				
				}catch(f){}
			}
		}
	}
	
	sXml+=tempXML;
	
// ------------------------------------------------------------------------
	
	xframes=this.getElementsByTagName("iframe");
	var x;
   	var openTag=true;
    if(sXml!="")
    {
        if(auxBoFormSubmit.BOUI)
        {
            var ss="";
            if ( auxBoFormSubmit.addToCtxParentBridge &&  auxBoFormSubmit.ctxParent )
            {
            
				ss=" addToCtxParentBridge = '"+auxBoFormSubmit.addToCtxParentBridge.value+"'";
				ss+=" ctxParent ='"+auxBoFormSubmit.ctxParent.value+"'";
            
            }
            sXml = "<" + e + ss+" boui='"+auxBoFormSubmit.BOUI.value+"'>" + sXml  //+ "</" + e + ">";
        }
        else
        {
            openTag=false;
        }
    }
	else if ( auxBoFormSubmit.BOUI ){
	    if ( !onlyVerify )
	    {
			var ss="";
            if ( auxBoFormSubmit.addToCtxParentBridge &&  auxBoFormSubmit.ctxParent )
            {
				ss=" addToCtxParentBridge = '"+auxBoFormSubmit.addToCtxParentBridge.value+"'";
				ss+=" ctxParent ='"+auxBoFormSubmit.ctxParent.value+"'";
            }
			sXml = "<" + e +ss+" boui ='"+auxBoFormSubmit.BOUI.value+"'>" // + "</" + e + ">";
	    }
	    else  openTag=false;
	}
	else  openTag=false;
	
	for ( var i=0 ; i< xframes.length ; i++ ){
		if (xframes[i].contentWindow.boForm && (typeof xframes[i].contentWindow.boForm.BuildXml!= 'undefined'))
		{
			x=xframes[i].contentWindow.boForm.BuildXml(bValidate,onlyVerify, false);
			sXml+=x;
		}
		else if(xframes[i].contentWindow.BuildXml != null){
			x=xframes[i].contentWindow.BuildXml(bValidate,onlyVerify, false);
			sXml+=x;
		}
	}
	if ( openTag) sXml+= "</" + e + ">";
	
	
	if( sXml=="" &&onlyVerify && auxBoFormSubmit.boiChanged && auxBoFormSubmit.boiChanged.value=='true') sXml='<bochanged/>';
	auxBoFormSubmit.boFormSubmitXml.value = sXml;
	return sXml;
	
}

function BuildXml(bValidate,onlyVerify,lookFamily)
{	
	var sXml = "";
	try
	{
		sXml += BuildElemXml(bValidate,onlyVerify, boForm, boFormSubmit);
	}
	catch(e)
	{
		return sXml;
	}
	
	var winm=winmain();
	if(lookFamily == null || lookFamily){
		//vou verificar os irmãos
		if( winm==window )
		{
			var x=window;
		}
		else
		{
			var x=winm.eval('frm$'+getIDX());
		}
		var familyXml = "";
        if (x.boFormSubmit&& x.boFormSubmit.BOUI )
        {
			for ( var i=0 ; i < winm.ndl.length ; i ++)
			{
				if ( winm.ndl[i] && winm.ndl[i]!=this )
				{			
					var xd=winm.eval('frm$'+winm.ndl[i].idx);
					if (xd.boFormSubmit&& xd.boFormSubmit.BOUI )
					{
						if ( xd && xd.boFormSubmit && xd.boFormSubmit.docid.value == x.boFormSubmit.docid.value &&
							xd.boFormSubmit.BOUI.value != x.boFormSubmit.BOUI.value)
						{
              if(xd.boForm)
              {
							  familyXml += BuildElemXml(bValidate,onlyVerify, xd.boForm, xd.boFormSubmit,xd);
              }
              else if(xd.BuildXml != null)
              {  
                familyXml += xd.BuildXml();
              }
							//alert(familyXml)
						}
					}
				 }
			}
		}
		//alert('family: ' + familyXml);
		if(familyXml != "")
		{
			sXml = familyXml + sXml;
		}
		if(sXml != "")
		{
			
			sXml = "<boData>" + sXml + "</boData>";
			
		}	
			
		boFormSubmit.boFormSubmitXml.value = sXml;
		//alert('Ultimo: ' + sXml);
	}
	else{
		if(sXml != "")
		{
			boFormSubmit.boFormSubmitXml.value = "<boData>" + sXml + "</boData>";	
		}
		else
		{
			boFormSubmit.boFormSubmitXml.value = sXml;	
		}
	}
	//alert('*** ' + sXml);
	return sXml;	
}



function buildElem(o,onlyVerify)
{
	var e = o.name;
	var s = o.value;
	var ori=o.original;
	var a = "";
	
	if(!e) e='none';
	if (o.className == "duration")
	{
	 //s = new String(o.minutes);
	}
	if (o.returnValue)
	{
		s = o.returnValue;
	}
	if(o.className && o.className == 'num')
    {
        if( s != ori && ( onlyVerify? !o.automatic:true ) )
        {
            if(ori == null)
            {
                ori = '';
            }
            s = s.replace(/\,/g, ".")
            ori = ori.replace(/\,/g, ".")
            var cmp1 = parseFloat(s);
            var cmp2 = parseFloat(ori);
            if(isNaN(cmp1) && isNaN(cmp2))
                return '';
    		if(cmp1 != cmp2)
    		{
    		    s=s.replace(/>/g,"_x_62;");
		        s=s.replace(/</g,"_x_60;");
		        s=s.replace(/&/g,"_x_38;");
                if( s === "undefined" )
                {
                    s = "";
                }
    		    return "<" + e + a + ">" + s + "</" + e + ">";
    		}
    	}
    	return '';
	}
	else if ( s != ori && ( onlyVerify? !o.automatic:true ) ) {
        s=s.replace(/>/g,"_x_62;");
		s=s.replace(/</g,"_x_60;");
		s=s.replace(/&/g,"_x_38;");
		if( s === "undefined" )
		{
			return '';
		}
        else
        {
            return "<" + e + a + ">" + s + "</" + e + ">";
        }
	}
    else return '';
}
function executeStaticMeth( methodName, parametersArray )
{
  createHiddenInput( "toExecute", "STATIC-"+methodName+";"+parametersArray.join("|"));
  var xst=winmain().getStatus( getIDX() )
  boForm.BindValues();
  winmain().setStatus( getIDX(),xst);
	
}

</script>
</public:component>
